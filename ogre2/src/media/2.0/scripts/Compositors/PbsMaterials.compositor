compositor_node PbsMaterialsRenderingNode
{
  // rt0 - original scene
  texture rt0 target_width target_height PF_R8G8B8
  // rt1 - texture to be passed to the next compositor node for
  // adding render pass effect. Note: it seems that a clear pass is not needed
  // for rt1
  texture rt1 target_width target_height PF_R8G8B8

  target rt0
  {

    pass clear
    {
      colour_value 0.0 0.0 0.0 1
    }

    pass render_scene
    {
      overlays  on
      shadows   PbsMaterialsShadowNode
    }
  }

  out 0 rt0
  out 1 rt1
}

compositor_node FinalComposition
{
  in 0 rt_output
  // Take input texture #1 and use the local name "rtN" for reference in this
  // scope. Note: A clear pass was removed from this target as it generated
  // image artifacts on some machines
  in 1 rtN

  target rt_output
  {
    pass render_quad
    {
      // Ignore the alpha channel
      material Ogre/Copy/4xFP32
      input 0 rtN
    }

    pass render_scene
    {
      lod_update_list off

      // Render Overlays
      overlays  on
      rq_first  254
      rq_last   255
    }
  }
}


abstract target cubemap_target_shadow
{
  pass clear { colour_value 1 1 1 1 }
  pass render_scene
  {
    camera_cubemap_reorient true
  }
}

compositor_node_shadow PbsMaterialsShadowNode
{
  technique pssm

  texture atlas_dir 2048 3072 PF_D32_FLOAT no_fsaa
  texture atlas 8192 8192 PF_D32_FLOAT no_fsaa
  texture tmpCubemap 1024 1024 PF_FLOAT32_R cubemap no_fsaa

  num_splits    3
  pssm_lambda   0.95
  shadow_map 0 atlas_dir uv 0.0 0.000000000000000 1.0 0.666666666666666 light 0 split 0
  shadow_map 1 atlas_dir uv 0.0 0.666666666666666 0.5 0.333333333333333 light 0 split 1
  shadow_map 2 atlas_dir uv 0.5 0.666666666666666 0.5 0.333333333333333 light 0 split 2

  technique focused
  shadow_map 3  atlas   uv 0.0  0.0  0.25 0.25 light 1
  shadow_map 4  atlas   uv 0.0  0.25 0.25 0.25 light 2
  shadow_map 5  atlas   uv 0.0  0.50 0.25 0.25 light 3
  shadow_map 6  atlas   uv 0.0  0.75 0.25 0.25 light 4
  shadow_map 7  atlas   uv 0.25 0.0  0.25 0.25 light 5
  shadow_map 8  atlas   uv 0.25 0.25 0.25 0.25 light 6
  shadow_map 9  atlas   uv 0.25 0.50 0.25 0.25 light 7
  shadow_map 10 atlas   uv 0.25 0.75 0.25 0.25 light 8
  shadow_map 11 atlas   uv 0.50 0.0  0.25 0.25 light 9
  shadow_map 12 atlas   uv 0.50 0.25 0.25 0.25 light 10
  shadow_map 13 atlas   uv 0.50 0.50 0.25 0.25 light 11
  shadow_map 14 atlas   uv 0.50 0.75 0.25 0.25 light 12
  shadow_map 15 atlas   uv 0.75 0.0  0.25 0.25 light 13
  shadow_map 16 atlas   uv 0.75 0.25 0.25 0.25 light 14
  shadow_map 17 atlas   uv 0.75 0.50 0.25 0.25 light 15
  shadow_map 18 atlas   uv 0.75 0.75 0.25 0.25 light 16

  target atlas_dir
  {
    pass clear
    {
      colour_value 1 1 1 1
    }
  }

  target atlas
  {
    pass clear
    {
      colour_value 1 1 1 1
    }
  }

  shadow_map_target_type directional
  {
    shadow_map 0 1 2
    {
      pass render_scene
      {
      }
    }
  }

  shadow_map_target_type directional spot
  {
    shadow_map 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
    {
      pass render_scene
      {
      }
    }
  }

  shadow_map_target_type point
  {
    shadow_map_repeat 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18
    {
      target tmpCubemap +X : cubemap_target_shadow {}
      target tmpCubemap -X : cubemap_target_shadow {}
      target tmpCubemap +Y : cubemap_target_shadow {}
      target tmpCubemap -Y : cubemap_target_shadow {}
      target tmpCubemap +Z : cubemap_target_shadow {}
      target tmpCubemap -Z : cubemap_target_shadow {}

      shadow_map
      {
        pass render_quad
        {
          material Ogre/DPSM/CubeToDpsm
          input 0 tmpCubemap
        }
      }
    }
  }
}

workspace PbsMaterialsWorkspace
{
  connect_output FinalComposition 0
  connect PbsMaterialsRenderingNode 0 FinalComposition 1
}
