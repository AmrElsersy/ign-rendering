abstract target cubemap_target
{
  pass clear
  {
    colour_value 0.2 0.5 0 1
  }

  pass render_scene
  {
    overlays      off
    camera_cubemap_reorient true
  }
}


compositor_node CubemapRendererNode
{
  in 0 cubemap

  target cubemap +X : cubemap_target { }
  target cubemap -X : cubemap_target { }
  target cubemap +Y : cubemap_target { }
  target cubemap -Y : cubemap_target { }
  target cubemap +Z : cubemap_target { }
  target cubemap -Z : cubemap_target
  {
    pass generate_mipmaps
    {
    }
  }
}
/*
compositor_node CubemapRendererNode2
{
  in 0 tmpCubemap

  target tmpCubemap +X : cubemap_target { }
  target tmpCubemap -X : cubemap_target { }
  target tmpCubemap +Y : cubemap_target { }
  target tmpCubemap -Y : cubemap_target { }
  target tmpCubemap +Z : cubemap_target { }
  target tmpCubemap -Z : cubemap_target
  {
    pass generate_mipmaps
    {
    }
  }


  out 0 tmpCubemap
}

workspace GpuRaysCubemapWorkspace
{
  connect_output CubemapRendererNode2 0
}
*/



compositor_node GpuRaysCompose
{
  in 0 rt_input
  in 1 cubemap

  target rt_input
  {
    pass clear
    {
      colour_value 0.1 0.2 0.3 1
    }

    pass render_quad
    {
      expose cubemap
      material GpuRaysCompose
      input 0 cubemap
    }
  }

  out 0 rt_input
}

/*workspace GpuRaysComposeWorkspace
{
  connect_output GpuRaysCompose 0
}
*/


workspace GpuRaysComposeWorkspace
{
  connect_external 0 GpuRaysCompose 0
  connect_external 1 GpuRaysCompose 1
}



compositor_node GpuRays1stPass
{
  in 0 rt_input

  texture depthTexture target_width target_height PF_D32_FLOAT

  target depthTexture
  {
    pass clear
    {
      colour_value 0.7 0.3 0.4 1.0
    }
    pass render_scene
    {
    }
  }

  target rt_input
  {
    pass clear
    {
      colour_value 0.2 0.3 0.4 1.0
    }
    pass render_quad
    {
      material GpuRaysScan1st
      input 0 depthTexture
      quad_normals camera_far_corners_view_space
    }
  }

/*  target rt_input
  {
    pass clear
    {
      colour_value 0.2 0.3 0.4 1.0
    }
    pass render_scene
    {
    }
  }
*/
  out 0 rt_input
}

workspace GpuRays1stPassWorkspace
{
  connect_output GpuRays1stPass 0
}


compositor_node GpuRays2ndPass
{
  in 0 rt_input

/*  texture secondPass target_width target_height PF_D32_FLOAT

  target secondPass
  {
    pass clear { }
    pass render_scene
    {
    }
  }
*/

  target rt_input
  {
    pass clear
    {
      colour_value 0.2 0.3 0.4 1.0
    }
    pass render_quad
    {
      material GpuRaysScan2nd
//      input 0 secondPass
    }
  }
  out 0 rt_input
}

workspace GpuRays2ndPassWorkspace
{
  connect_output GpuRays2ndPass 0
}
